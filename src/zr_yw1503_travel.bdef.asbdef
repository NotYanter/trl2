managed implementation in class zbp_r_yw1503_travel unique; /* bp = behavior pool */
strict ( 2 );

/* Wurzel Knoten Travel */

define behavior for ZR_YW1503_Travel alias Travel
persistent table zyw1503_atravel
lock master
authorization master ( instance )
//etag master <field_name>
{
  create;
  update;
  delete;
  association _Bookings { create; }

  static action show_test_message;
  action cancel_booking;
  action maintain_booking_fees parameter ZA_YW1503_BookingFees;


  field ( readonly, numbering : managed ) TravelUuid;
  field ( readonly ) TravelId, TotalPrice;
  field ( readonly ) CreatedBy, Createdat, Lastchangedby, Lastchangedat;
  field ( mandatory : create ) AgencyId, BeginDate, CustomerId, EndDate;
  field ( readonly : update )AgencyId, BeginDate, CustomerId, EndDate;
  field ( mandatory ) Description;


  mapping for zyw1503_atravel corresponding
  {

    AgencyId = agency_id;
    BeginDate = begin_date;
    BookingFee = booking_fee;
    CurrencyCode = currency_code;
    CustomerId = customer_id;
    EndDate = end_date;
    TotalPrice = total_price;
    TravelId = travel_id;
    TravelUuid = travel_uuid;
  }
}

/* Kindknoten Booking */

define behavior for ZR_YW1503_Booking alias Booking
persistent table zyw1503_abooking
lock dependent by _Travel
authorization dependent by _Travel
//etag master <field_name>
{
  update;
  delete;

  field ( readonly, numbering : managed ) BookingUuid;
  field ( readonly ) TravelUuid;

  association _Travel;

  mapping for zyw1503_abooking corresponding {

    BookingDate = booking_date;
    BookingId = booking_id;
    BookingUuid = booking_uuid;
    CarrierId = carrier_id;
    ConnectionId = connection_id;
    CurrencyCode = currency_code;
    CustomerId = customer_id;
    FlightDate = flight_date;
    FlightPrice = flight_price;
    TravelUuid = travel_uuid;

  }
}